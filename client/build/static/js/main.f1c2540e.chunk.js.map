{"version":3,"sources":["components/ProductForm.js","components/OrderSummary.js","App.js","index.js"],"names":["ProductForm","_ref","products","onAddProduct","selectedProduct","setSelectedProduct","useState","quantity","setQuantity","_jsxs","className","children","value","onChange","e","target","_jsx","map","product","_id","name","type","min","placeholder","onClick","handleAddProduct","OrderSummary","order","calculateDiscountedPrice","offers","length","price","offer","discountedPrice","discountValue","item","index","originalPrice","toFixed","reduce","total","App","setProducts","setOrder","useEffect","axios","get","then","response","data","catch","error","console","find","p","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1c2540e.chunk.js","sourcesContent":["\nimport React, { useState } from 'react';\n\nconst ProductForm = ({ products, onAddProduct }) => {\n  const [selectedProduct, setSelectedProduct] = useState('');\n  const [quantity, setQuantity] = useState(1);\n\n  const handleAddProduct = () => {\n    if (selectedProduct && quantity > 0) {\n      onAddProduct({ product: selectedProduct, quantity });\n    }\n  };\n\n  return (\n    <div className=\"product-form\">\n      <select value={selectedProduct} onChange={(e) => setSelectedProduct(e.target.value)}>\n        <option value=\"\">Select Product</option>\n        {products.map((product) => (\n          <option key={product._id} value={product._id}>\n            {product.name}\n          </option>\n        ))}\n      </select>\n      <input\n        type=\"number\"\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value)}\n        min=\"1\"\n        placeholder=\"Quantity\"\n      />\n      <button onClick={handleAddProduct}>Add Product</button>\n    </div>\n  );\n};\n\nexport default ProductForm;\n","import React from 'react';\n\nconst OrderSummary = ({ order }) => {\n  // Helper function to calculate the discounted price\n  const calculateDiscountedPrice = (product, quantity) => {\n    if (product.offers.length === 0) {\n      return product.price * quantity;\n    }\n\n    const offer = product.offers[0];\n    let discountedPrice = product.price * quantity;\n\n    if (offer.type === 'flat') {\n      discountedPrice -= offer.discountValue * quantity;\n    } else if (offer.type === 'percentage') {\n      discountedPrice -= (product.price * (offer.discountValue / 100)) * quantity;\n    }\n    \n    // For 'product' type, it's generally a free product offer, so no price reduction is applied.\n    return discountedPrice;\n  };\n\n  // Function to calculate the total price after discount\n  const calculateTotal = () => {\n    return order.reduce((total, item) => {\n      return total + calculateDiscountedPrice(item.product, item.quantity);\n    }, 0);\n  };\n\n  return (\n    <div className=\"order-summary\">\n      <h3>Order Summary</h3>\n      <table>\n        <thead>\n          <tr>\n            <th>Product Name</th>\n            <th>Quantity</th>\n            <th>Original Price (Rs.)</th>\n            <th>Discount</th>\n            <th>Price After Discount (Rs.)</th>\n          </tr>\n        </thead>\n        <tbody>\n          {order.map((item, index) => {\n            const originalPrice = item.product.price * item.quantity;\n            const discountedPrice = calculateDiscountedPrice(item.product, item.quantity);\n            const offer = item.product.offers[0] || null;\n            return (\n              <tr key={index}>\n                <td>{item.product.name}</td>\n                <td>{item.quantity}</td>\n                <td>Rs. {originalPrice.toFixed(2)}</td>\n                <td>\n                  {offer ? (\n                    offer.type === 'flat' ? (\n                      `Flat Rs. ${offer.discountValue} off`\n                    ) : offer.type === 'percentage' ? (\n                      `${offer.discountValue}% off`\n                    ) : (\n                      'Buy one get one free'\n                    )\n                  ) : (\n                    'No Offer'\n                  )}\n                </td>\n                <td>Rs. {discountedPrice.toFixed(2)}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <h4>Total: Rs. {calculateTotal().toFixed(2)}</h4>\n    </div>\n  );\n};\n\nexport default OrderSummary;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Import Axios for API calls\nimport ProductForm from './components/ProductForm';\nimport OrderSummary from './components/OrderSummary';\n\nfunction App() {\n  const [products, setProducts] = useState([]); // State to store products fetched from the backend\n  const [order, setOrder] = useState([]);\n\n  // Fetch products from the backend API when the component mounts\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/products')\n      .then((response) => {\n        setProducts(response.data); // Update the products state with data from API\n      })\n      .catch((error) => {\n        console.error('Error fetching products:', error);\n      });\n  }, []); // Empty dependency array means this will run once when the component mounts\n\n  const addProductToOrder = (item) => {\n    const product = products.find(p => p._id === item.product);\n    setOrder([...order, { product, quantity: item.quantity }]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>POS System</h1>\n      <ProductForm products={products} onAddProduct={addProductToOrder} />\n      <OrderSummary order={order} />\n    </div>\n  );\n}\n\nexport default App;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}