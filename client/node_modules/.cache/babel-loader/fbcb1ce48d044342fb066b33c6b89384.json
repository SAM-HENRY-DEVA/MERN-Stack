{"ast":null,"code":"var _jsxFileName = \"D:\\\\mern\\\\grow\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Import Axios for API calls\nimport ProductForm from './components/ProductForm';\nimport OrderSummary from './components/OrderSummary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [products, setProducts] = useState([]); // State to store products fetched from the backend\n  const [order, setOrder] = useState([]);\n\n  // Fetch products from the backend API when the component mounts\n  useEffect(() => {\n    axios.get('https://growxcd-mern-backend.onrender.com/api/products').then(response => {\n      setProducts(response.data); // Update the products state with data from API\n    }).catch(error => {\n      console.error('Error fetching products:', error);\n    });\n  }, []); // Empty dependency array means this will run once when the component mounts\n\n  const addProductToOrder = item => {\n    const product = products.find(p => p._id === item.product);\n    setOrder([...order, {\n      product,\n      quantity: item.quantity\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"POS System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProductForm, {\n      products: products,\n      onAddProduct: addProductToOrder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrderSummary, {\n      order: order\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vCWj4Yr+GeMIYsh9xU964nWRz4Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","ProductForm","OrderSummary","jsxDEV","_jsxDEV","App","_s","products","setProducts","order","setOrder","get","then","response","data","catch","error","console","addProductToOrder","item","product","find","p","_id","quantity","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddProduct","_c","$RefreshReg$"],"sources":["D:/mern/grow/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Import Axios for API calls\nimport ProductForm from './components/ProductForm';\nimport OrderSummary from './components/OrderSummary';\n\nfunction App() {\n  const [products, setProducts] = useState([]); // State to store products fetched from the backend\n  const [order, setOrder] = useState([]);\n\n  // Fetch products from the backend API when the component mounts\n  useEffect(() => {\n    axios.get('https://growxcd-mern-backend.onrender.com/api/products')\n      .then((response) => {\n        setProducts(response.data); // Update the products state with data from API\n      })\n      .catch((error) => {\n        console.error('Error fetching products:', error);\n      });\n  }, []); // Empty dependency array means this will run once when the component mounts\n\n  const addProductToOrder = (item) => {\n    const product = products.find(p => p._id === item.product);\n    setOrder([...order, { product, quantity: item.quantity }]);\n\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>POS System</h1>\n      <ProductForm products={products} onAddProduct={addProductToOrder}/>\n      <OrderSummary order={order} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,YAAY,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACdC,KAAK,CAACW,GAAG,CAAC,wDAAwD,CAAC,CAChEC,IAAI,CAAEC,QAAQ,IAAK;MAClBL,WAAW,CAACK,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAME,iBAAiB,GAAIC,IAAI,IAAK;IAClC,MAAMC,OAAO,GAAGb,QAAQ,CAACc,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKJ,IAAI,CAACC,OAAO,CAAC;IAC1DV,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;MAAEW,OAAO;MAAEI,QAAQ,EAAEL,IAAI,CAACK;IAAS,CAAC,CAAC,CAAC;EAE5D,CAAC;EAED,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBtB,OAAA;MAAAsB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB1B,OAAA,CAACH,WAAW;MAACM,QAAQ,EAAEA,QAAS;MAACwB,YAAY,EAAEb;IAAkB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACnE1B,OAAA,CAACF,YAAY;MAACO,KAAK,EAAEA;IAAM;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV;AAACxB,EAAA,CA5BQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}